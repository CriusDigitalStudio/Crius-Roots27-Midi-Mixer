#include <Control_Surface.h>  // Δηλώνουμε οτι θα χρησιμοποιήσουμε τη βιβλιοθήκη έτοιμου κώδικα Control Surface

HairlessMIDI_Interface midi;  // Δηλώνουμε το είδος της επικοινωνίας MIDI του Arduino με το PC

CD74HC4067 mux1 = {           // Ορίζουμε τον πρώτο Multiplexer ως mux1
 A0,                          // Αντιστοιχίζουμε το SIG PIN του πρρώτου Multiplexer με την αναλογική είσοδο στο PIN A0 του Arduino
 {2, 3, 4, 5}                 // Αντιστοιχίζουμε τα PIN  S0 , S1 , S2 , S3 του πρώτου Multiplexer με τις ψηφιακές εισόδους στα PIN 2 , 3 , 4, 5 του Arduino
};

CD74HC4067 mux2 = {           // Η ίδια διαδικασία με παραπάνω για τον δεύτερο Multiplexer (mux2)
 A1,              
 {6, 7, 8, 9} 
};
 
CCPotentiometer muxPots[] = {     // Ορίζουμε τη θέση κάθε ποτενσιόμετρου σε μια διάταξη των 16 για κάθε Multiplexer , για να διαβάζουμε την τιμή του κάθε ποτενσιόμετρου και να στέλνουμε την εντολή Midi Control Change για το καθένα 
 {mux1.pin(0), {1, CHANNEL_1}},   // Διαβάζουμε την τιμή του PIN 0 που αντιστοιχεί στο C0 PIN του πρώτου Multiplexer (mux1) , Ορίζουμε τον αριθμό του ποτενσιόμετρου (δλδ Controller 1) ,στέλνουμε τη τιμή Midi στο Channel 1
 {mux1.pin(1), {2, CHANNEL_1}},   // Διαβάζουμε την τιμή του PIN 1 που αντιστοιχεί στο C1 PIN του πρώτου Multiplexer (mux1) , Ορίζουμε τον αριθμό του ποτενσιόμετρου (δλδ Controller 2) ,στέλνουμε τη τιμή Midi στο Channel 1
 {mux1.pin(2), {3, CHANNEL_1}},   // Διαβάζουμε την τιμή του PIN 2 που αντιστοιχεί στο C2 PIN του πρώτου Multiplexer (mux1) , Ορίζουμε τον αριθμό του ποτενσιόμετρου (δλδ Controller 3) ,στέλνουμε τη τιμή Midi στο Channel 1
 {mux1.pin(3), {4, CHANNEL_1}},   //...  
 {mux1.pin(4), {5, CHANNEL_1}},   //...
 {mux1.pin(5), {6, CHANNEL_1}},   //...
 {mux1.pin(6), {7, CHANNEL_1}},   //...
 {mux1.pin(7), {8, CHANNEL_1}},   //...
 {mux1.pin(8), {9, CHANNEL_1}},   //...
 {mux1.pin(9), {10, CHANNEL_1}},  //...
 {mux1.pin(10), {11, CHANNEL_1}}, //...
 {mux1.pin(11), {12, CHANNEL_1}}, //...
 {mux1.pin(12), {13, CHANNEL_1}}, //...
 {mux1.pin(13), {14, CHANNEL_1}}, //...
 {mux1.pin(14), {15, CHANNEL_1}}, //...
 {mux1.pin(15), {16, CHANNEL_1}}, //...
 {mux2.pin(0), {17, CHANNEL_1}},  // Διαβάζουμε την τιμή του PIN 1 που αντιστοιχεί στο C1 PIN του δεύτερου Multiplexer(mux2) , Ορίζουμε τον αριθμό του ποτενσιόμετρου (δλδ Controller 17) ,στέλνουμε τη τιμή Midi στο Channel 1
 {mux2.pin(1), {18, CHANNEL_1}},  //...
 {mux2.pin(2), {19, CHANNEL_1}},  //...
 {mux2.pin(3), {20, CHANNEL_1}},  //...
 {mux2.pin(4), {21, CHANNEL_1}},  //...
 {mux2.pin(5), {22, CHANNEL_1}},  //...
 {mux2.pin(6), {23, CHANNEL_1}},  //...
 {mux2.pin(7), {24, CHANNEL_1}},  //...
 {mux2.pin(8), {25, CHANNEL_1}},  //...
 {mux2.pin(9), {26, CHANNEL_1}},  //...
 {mux2.pin(10), {27, CHANNEL_1}}, // Διαβάζουμε την τιμή του PIN 10 που αντιστοιχεί στο C10 PIN του δεύτερου Multiplexer(mux2) , Ορίζουμε τον αριθμό του ποτενσιόμετρου (δλδ Controller 27) ,στέλνουμε τη τιμή Midi στο Channel 1
};

void setup() {
  Control_Surface.begin();   // Δηλώνουμε οτι όταν ενεργοποιηθεί το Arduino θέλουμε να ξεκινάει η λειτουργία Control Surface
}
 
void loop() {
  Control_Surface.loop();    // Δηλώνουμε οτι θέλουμε να εκτελεί συνεχώς τη λειτουργία Control Surface για να ανανεώνει τις τιμές των ποτενσιόμετρων και να στέλνει τις νέες όταν κουνάμε κάποιο ποτενσιόμετρο
}
